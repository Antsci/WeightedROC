Fast, weighted ROC curves

Receiver Operating Characteristic (ROC) curve analysis is one way to
evaluate an algorithm for binary classification. R packages
ROCR/pROC/AUC/PerfMeas/PRROC implement ROC curve computation. However,
if the observations have weights (non-uniform loss) then these
packages can not be used. The WeightedROC package implements ROC and
Area Under the Curve (AUC) computation for weighted binary
classification problems.

#+BEGIN_SRC R
install.packages("devtools")
devtools::install_github("tdhock/WeightedROC")
library(WeightedROC)
example(WeightedROC)
example(WeightedAUC)
#+END_SRC

| Package     |   version |       date | lines of R code | weights | tests | cumsum |
|-------------+-----------+------------+-----------------+---------+-------+--------|
| pROC        |     1.7.9 | 2014-06-12 |            5666 | no      | no    | *yes*  |
| ROCR        |     1.0-5 | 2013-05-16 |            1650 | no      | no    | *yes*  |
| PRROC       |       1.0 | 2014-12-16 |             723 | no      | no    | no     |
| PerfMeas    |     1.2.1 | 2014-09-07 |             684 | no      | no    | no     |
| AUC         |     0.3.0 | 2013-09-30 |             354 | no      | no    | no     |
| WeightedROC | 2014.7.10 | 2014-07-10 |             294 | *yes*   | *yes* | *yes*  |
| glmnet::auc |     1.9-5 | 2013-08-01 |              22 | *yes*   | no    | *yes*  |

- *weights* shows which packages allow weights (non-uniform loss for each observation).
- *tests* shows which R packages implement [[file:tests/testthat/test-auc.R][unit tests]] to check that the
  ROC/AUC is computed correctly. Note that WeightedROC is the only package
  that has unit tests.
- *lines of R code* shows how many lines of code were used in the pkg/R/* files.
  Note that WeightedROC has the simplest implementation other than glmnet::auc.
- *cumsum* shows whether or not the cumsum function is used to compute
  the ROC curve. Using the cumsum function is simple to code and fast
  -- see the [[file:vignettes/Speed.Rnw][Speed vignette]],

#+BEGIN_SRC R
vignette("Speed", "WeightedROC")
#+END_SRC

** What is the mathematical definition of the weighted ROC curve?

See the [[file:vignettes/Definition.Rnw][Definition vignette]],

#+BEGIN_SRC R
vignette("Definition", "WeightedROC")
#+END_SRC

** When to use PRROC? 

For "soft" real-valued labels (not "hard" labels $\in \{-1, 1\}$), and
 [[https://www.biostat.wisc.edu/~page/rocpr.pdf][accurate interpolation]] of Precision-Recall curves, use PRROC.

Note that the meaning of the word "Weighted" in WeightedROC is not the
same as in the title of package PRROC: "Precision-Recall and ROC
Curves for Weighted and Unweighted Data." In WeightedROC, each
observation $i$ has a "hard" label $y_i \in\{-1, 1\}$ and a weight
$w_i\in R_+$ which determines how much it contributes to the loss
function. In PRROC, each observation contributes an equal amount
$w_i=1$ to the loss function, and labels can be soft $y_i\in R$.

** When to use ROCR?

To compute other evaluation metrics (e.g. lift) use the ROCR
package. WeightedROC does not implement evaluation metrics other than
ROC/AUC.

** When to use pROC?

To compute the partial AUC and compare curves using statistical tests
use the pROC package. WeightedROC does not implement these features.

** When to use glmnet?

The glmnet package includes an =auc= function for computing AUC, but
does not include a function for computing the ROC curve. So it
actually computes the AUC faster than WeightedROC, for both equal or
unequal weights. WARNING: as of glmnet 1.9-5 (2013-8-1), it returns
the incorrect AUC when there are ties in the predicted scores, see
=example(WeightedAUC)=. Conclusion: if your scores have no ties, and
you only want the AUC (not the ROC curve), then glmnet::auc will
compute the AUC very fast.
