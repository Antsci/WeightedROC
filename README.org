Fast, weighted ROC curves

Receiver Operating Characteristic (ROC) curve analysis is one way to
evaluate an algorithm for binary classification. R packages ROCR/pROC
implement ROC curve computation. However, if the observations have
weights then the ROCR/pROC packages can not be used, as of ROCR 1.0-5
(2013-05-16) and pROC 1.7.9 (2014-06-12).

The WeightedROC package implements ROC and Area Under the Curve (AUC)
computation for weighted binary classification problems. WeightedROC
can also be used for un-weighted problems, and it is 2-10x faster than
ROCR/pROC (see examples below).

#+BEGIN_SRC R
install.packages(c("devtools", "ROCR", "microbenchmark", "pROC"))
devtools::install_github("tdhock/WeightedROC")
library(WeightedROC)
example(WeightedROC)
example(WeightedAUC)
#+END_SRC

** What is the mathematical definition of the weighted ROC curve?

#+BEGIN_SRC R
vignette("Definition", "WeightedROC")
#+END_SRC

** When should I use ROCR?

If you want to compute many other evaluation metrics
(e.g. precision/recall) then you should use the ROCR package, since
WeightedROC can only compute ROC/AUC.

** When should I use pROC?

If you want to compute the partial AUC and compare curves using
statistical tests then you should use the pROC package, since
WeightedROC does not implement these features.
** When should I use glmnet?

The glmnet package includes an =auc= function for computing AUC, but
does not include a function for computing the ROC curve. So it
actually computes the AUC faster than WeightedROC, for both equal or
unequal weights. WARNING: as of glmnet 1.9-5 (2013-8-1), it returns
the incorrect AUC when there are ties in the predicted scores, see
=example(WeightedAUC)=. Conclusion: if your scores have no ties, and
you only want the AUC (not the ROC curve), then glmnet::auc will
compute the AUC very fast.
